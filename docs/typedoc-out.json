{
	"id": 0,
	"name": "professor-kauri",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 241,
			"name": "Ability",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 251,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 16,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 252,
							"name": "new Ability",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 253,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ability",
										"package": ".prisma",
										"name": "ability"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 241,
								"name": "Ability"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "announcement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 10,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 254,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 256,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 9,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 255,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 8,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 242,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 13,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 243,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 14,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 258,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 41,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 259,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 247,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 30,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 249,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 250,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 241,
												"name": "Ability"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 244,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Ability.ts",
							"line": 24,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 245,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 246,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						251
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						257,
						254,
						256,
						255,
						242,
						243
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						258,
						247,
						244
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/Ability.ts",
					"line": 6,
					"character": 13
				}
			]
		},
		{
			"id": 260,
			"name": "Attack",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 270,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 35,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 271,
							"name": "new Attack",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 272,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AttackData"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 260,
								"name": "Attack"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "accuracy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 16,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 279,
					"name": "category",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 18,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 273,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 276,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 14,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 274,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 277,
					"name": "power",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 275,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 13,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "type",
						"package": ".prisma",
						"name": "type"
					}
				},
				{
					"id": 261,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 32,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 262,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 33,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 280,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 92,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 281,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 64,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 268,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 269,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 260,
												"name": "Attack"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 263,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Attack.ts",
							"line": 58,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 265,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						270
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						278,
						279,
						273,
						276,
						274,
						277,
						275,
						261,
						262
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						280,
						266,
						263
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/Attack.ts",
					"line": 10,
					"character": 13
				}
			]
		},
		{
			"id": 391,
			"name": "BaseHandler",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"shortText": "Module handler heavily inspired by (basically just modified from) Akairo\nCredit to {@link https://github.com/discord-akairo/discord-akairo}"
			},
			"children": [
				{
					"id": 399,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 26,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "new BaseHandler",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 401,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 421,
										"typeArguments": [
											{
												"type": "reference",
												"id": 401,
												"name": "T"
											}
										],
										"name": "Module"
									},
									"default": {
										"type": "reference",
										"id": 421,
										"name": "Module"
									}
								}
							],
							"parameters": [
								{
									"id": 402,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 403,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 384,
										"name": "BaseHandlerOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 391,
								"typeArguments": [
									{
										"type": "reference",
										"id": 401,
										"name": "T"
									}
								],
								"name": "BaseHandler"
							}
						}
					]
				},
				{
					"id": 405,
					"name": "classToLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 421,
							"name": "Module"
						}
					},
					"defaultValue": "Module"
				},
				{
					"id": 404,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					}
				},
				{
					"id": 406,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'./'"
				},
				{
					"id": 407,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Set",
						"package": "typescript",
						"name": "Set"
					},
					"defaultValue": "..."
				},
				{
					"id": 408,
					"name": "modules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 401,
								"name": "T"
							}
						],
						"qualifiedName": "Collection",
						"package": "@discordjs/collection",
						"name": "Collection"
					}
				},
				{
					"id": 412,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 45,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 414,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 391,
								"typeArguments": [
									{
										"type": "reference",
										"id": 401,
										"name": "T"
									}
								],
								"name": "BaseHandler"
							}
						}
					]
				},
				{
					"id": 415,
					"name": "loadAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 57,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "loadAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 417,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 391,
								"typeArguments": [
									{
										"type": "reference",
										"id": 401,
										"name": "T"
									}
								],
								"name": "BaseHandler"
							}
						}
					]
				},
				{
					"id": 409,
					"name": "register",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 410,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 411,
									"name": "module",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 421,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 419,
												"name": "ModuleOptions"
											}
										],
										"name": "RawModule"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 391,
								"typeArguments": [
									{
										"type": "reference",
										"id": 401,
										"name": "T"
									}
								],
								"name": "BaseHandler"
							}
						}
					]
				},
				{
					"id": 392,
					"name": "getDeploymentData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 85,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 393,
							"name": "getDeploymentData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 394,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 395,
									"name": "extensions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Set",
										"package": "typescript",
										"name": "Set"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 419,
													"name": "ModuleOptions"
												}
											],
											"qualifiedName": "Readonly",
											"package": "typescript",
											"name": "Readonly"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 396,
					"name": "readdirRecursive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 99,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 397,
							"name": "readdirRecursive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 398,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						399
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						405,
						404,
						406,
						407,
						408
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						412,
						415,
						409,
						392,
						396
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/BaseHandler.ts",
					"line": 19,
					"character": 22
				}
			],
			"typeParameter": [
				{
					"id": 418,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"id": 421,
						"name": "Module"
					},
					"default": {
						"type": "reference",
						"id": 421,
						"name": "Module"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 459,
					"name": "CommandHandler"
				},
				{
					"type": "reference",
					"id": 535,
					"name": "EventHandler"
				}
			]
		},
		{
			"id": 431,
			"name": "Command",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 432,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 28,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 433,
							"name": "new Command",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 434,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 458,
										"name": "CommandOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 431,
								"name": "Command"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 423,
								"name": "Module.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 422,
						"name": "Module.constructor"
					}
				},
				{
					"id": 447,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "Module.client"
					}
				},
				{
					"id": 440,
					"name": "defaultPermission",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 25,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 439,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 446,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "Module.name"
					}
				},
				{
					"id": 441,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 26,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"id": 454,
							"name": "CommandOptionData"
						}
					}
				},
				{
					"id": 435,
					"name": "runAutocomplete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 6,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 436,
							"name": "runAutocomplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 437,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": "cached"
											}
										],
										"qualifiedName": "AutocompleteInteraction",
										"package": "discord.js",
										"name": "AutocompleteInteraction"
									}
								},
								{
									"id": 438,
									"name": "arg",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "ApplicationCommandOptionChoiceData",
										"package": "discord.js",
										"name": "ApplicationCommandOptionChoiceData"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 442,
					"name": "runCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/Command.ts",
							"line": 38,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 443,
							"name": "runCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 444,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": "cached"
											}
										],
										"qualifiedName": "CommandInteraction",
										"package": "discord.js",
										"name": "CommandInteraction"
									}
								},
								{
									"id": 445,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						432
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						447,
						440,
						439,
						446,
						441
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						435,
						442
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/commands/Command.ts",
					"line": 23,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 421,
					"name": "Module"
				}
			]
		},
		{
			"id": 459,
			"name": "CommandHandler",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 467,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 10,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 468,
							"name": "new CommandHandler",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 469,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 470,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 384,
										"name": "BaseHandlerOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 459,
								"name": "CommandHandler"
							},
							"overwrites": {
								"type": "reference",
								"id": 400,
								"name": "BaseHandler.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 399,
						"name": "BaseHandler.constructor"
					}
				},
				{
					"id": 507,
					"name": "classToLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 421,
							"name": "Module"
						}
					},
					"defaultValue": "Module",
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "BaseHandler.classToLoad"
					}
				},
				{
					"id": 506,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "BaseHandler.client"
					}
				},
				{
					"id": 508,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'./'",
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "BaseHandler.directory"
					}
				},
				{
					"id": 509,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Set",
						"package": "typescript",
						"name": "Set"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "BaseHandler.extensions"
					}
				},
				{
					"id": 510,
					"name": "modules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 431,
								"name": "Command"
							}
						],
						"qualifiedName": "Collection",
						"package": "@discordjs/collection",
						"name": "Collection"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "BaseHandler.modules"
					}
				},
				{
					"id": 498,
					"name": "augmentOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 116,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 499,
							"name": "augmentOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 500,
									"name": "module",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "Command"
									}
								},
								{
									"id": 501,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "CacheType",
												"package": "discord.js",
												"name": "CacheType"
											}
										],
										"qualifiedName": "CommandInteractionOption",
										"package": "discord.js",
										"name": "CommandInteractionOption"
									}
								},
								{
									"id": 502,
									"name": "sub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 503,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 505,
													"name": "command",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 119,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 504,
													"name": "group",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 119,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														505,
														504
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 241,
												"name": "Ability"
											},
											{
												"type": "reference",
												"id": 260,
												"name": "Attack"
											},
											{
												"type": "reference",
												"id": 282,
												"name": "EndOfTurn"
											},
											{
												"type": "reference",
												"id": 301,
												"name": "Item"
											},
											{
												"type": "reference",
												"id": 320,
												"name": "Species"
											},
											{
												"type": "reference",
												"id": 362,
												"name": "Weather"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 476,
					"name": "handleAutocomplete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 57,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 477,
							"name": "handleAutocomplete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 478,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": "cached"
											}
										],
										"qualifiedName": "AutocompleteInteraction",
										"package": "discord.js",
										"name": "AutocompleteInteraction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "handleCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 30,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "handleCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 475,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "literal",
												"value": "cached"
											}
										],
										"qualifiedName": "CommandInteraction",
										"package": "discord.js",
										"name": "CommandInteraction"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 514,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 45,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 515,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 516,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 459,
								"name": "CommandHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 413,
								"name": "BaseHandler.load"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "BaseHandler.load"
					}
				},
				{
					"id": 517,
					"name": "loadAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 57,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 518,
							"name": "loadAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 519,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 459,
								"name": "CommandHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 416,
								"name": "BaseHandler.loadAll"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "BaseHandler.loadAll"
					}
				},
				{
					"id": 490,
					"name": "parseOption",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 93,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "parseOption",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 492,
									"name": "module",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "Command"
									}
								},
								{
									"id": 493,
									"name": "option",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "CacheType",
												"package": "discord.js",
												"name": "CacheType"
											}
										],
										"qualifiedName": "CommandInteractionOption",
										"package": "discord.js",
										"name": "CommandInteractionOption"
									}
								},
								{
									"id": 494,
									"name": "sub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 495,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 497,
													"name": "command",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 96,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 496,
													"name": "group",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 96,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														497,
														496
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"qualifiedName": "User",
												"package": "discord.js",
												"name": "User"
											},
											{
												"type": "reference",
												"id": 241,
												"name": "Ability"
											},
											{
												"type": "reference",
												"id": 260,
												"name": "Attack"
											},
											{
												"type": "reference",
												"id": 282,
												"name": "EndOfTurn"
											},
											{
												"type": "reference",
												"id": 301,
												"name": "Item"
											},
											{
												"type": "reference",
												"id": 320,
												"name": "Species"
											},
											{
												"type": "reference",
												"id": 362,
												"name": "Weather"
											},
											{
												"type": "reference",
												"qualifiedName": "APIInteractionDataResolvedChannel",
												"package": "discord-api-types",
												"name": "APIInteractionDataResolvedChannel"
											},
											{
												"type": "reference",
												"qualifiedName": "GuildBasedChannel",
												"package": "discord.js",
												"name": "GuildBasedChannel"
											},
											{
												"type": "reference",
												"qualifiedName": "GuildMember",
												"package": "discord.js",
												"name": "GuildMember"
											},
											{
												"type": "reference",
												"qualifiedName": "Role",
												"package": "discord.js",
												"name": "Role"
											},
											{
												"type": "reference",
												"qualifiedName": "APIInteractionDataResolvedGuildMember",
												"package": "discord-api-types",
												"name": "APIInteractionDataResolvedGuildMember"
											},
											{
												"type": "reference",
												"qualifiedName": "APIRole",
												"package": "discord-api-types",
												"name": "APIRole"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 479,
					"name": "parseOptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 67,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 480,
							"name": "parseOptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 481,
									"name": "module",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 431,
										"name": "Command"
									}
								},
								{
									"id": 482,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"typeArguments": [
													{
														"type": "reference",
														"qualifiedName": "CacheType",
														"package": "discord.js",
														"name": "CacheType"
													}
												],
												"qualifiedName": "CommandInteractionOption",
												"package": "discord.js",
												"name": "CommandInteractionOption"
											}
										}
									}
								},
								{
									"id": 483,
									"name": "sub",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 484,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 486,
													"name": "command",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 70,
															"character": 26
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 485,
													"name": "group",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/framework/structures/commands/CommandHandler.ts",
															"line": 70,
															"character": 10
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														486,
														485
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 487,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"indexSignature": {
														"id": 488,
														"name": "__index",
														"kind": 8192,
														"kindString": "Index signature",
														"flags": {},
														"parameters": [
															{
																"id": 489,
																"name": "key",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												}
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 511,
					"name": "register",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 37,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 512,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 513,
									"name": "module",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 421,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 419,
												"name": "ModuleOptions"
											}
										],
										"name": "RawModule"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 459,
								"name": "CommandHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 410,
								"name": "BaseHandler.register"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 409,
						"name": "BaseHandler.register"
					}
				},
				{
					"id": 471,
					"name": "setup",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/commands/CommandHandler.ts",
							"line": 14,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 472,
							"name": "setup",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 459,
								"name": "CommandHandler"
							}
						}
					]
				},
				{
					"id": 460,
					"name": "getDeploymentData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 85,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "getDeploymentData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 462,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 463,
									"name": "extensions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Set",
										"package": "typescript",
										"name": "Set"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 419,
													"name": "ModuleOptions"
												}
											],
											"qualifiedName": "Readonly",
											"package": "typescript",
											"name": "Readonly"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 393,
								"name": "BaseHandler.getDeploymentData"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "BaseHandler.getDeploymentData"
					}
				},
				{
					"id": 464,
					"name": "readdirRecursive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 99,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "readdirRecursive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 466,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 397,
								"name": "BaseHandler.readdirRecursive"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "BaseHandler.readdirRecursive"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						467
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						507,
						506,
						508,
						509,
						510
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						498,
						476,
						473,
						514,
						517,
						490,
						479,
						511,
						471,
						460,
						464
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/commands/CommandHandler.ts",
					"line": 9,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 391,
					"typeArguments": [
						{
							"type": "reference",
							"id": 431,
							"name": "Command"
						}
					],
					"name": "BaseHandler"
				}
			]
		},
		{
			"id": 282,
			"name": "EndOfTurn",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 292,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 13,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 293,
							"name": "new EndOfTurn",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 294,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "end_of_turn",
										"package": ".prisma",
										"name": "end_of_turn"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 282,
								"name": "EndOfTurn"
							}
						}
					]
				},
				{
					"id": 295,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 6,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 297,
					"name": "effect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 296,
					"name": "order",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 283,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 10,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 284,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 11,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 298,
					"name": "getSurrounding",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 36,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 299,
							"name": "getSurrounding",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 300,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 282,
											"name": "EndOfTurn"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 288,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 25,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 290,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 291,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 282,
												"name": "EndOfTurn"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 285,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/EndOfTurn.ts",
							"line": 19,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 287,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						292
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						295,
						297,
						296,
						283,
						284
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						298,
						288,
						285
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/EndOfTurn.ts",
					"line": 5,
					"character": 13
				}
			]
		},
		{
			"id": 524,
			"name": "Event",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 525,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 14,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 526,
							"name": "new Event",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 527,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 520,
										"name": "EventOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 524,
								"name": "Event"
							},
							"overwrites": {
								"type": "reference",
								"id": 423,
								"name": "Module.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 422,
						"name": "Module.constructor"
					}
				},
				{
					"id": 534,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 426,
						"name": "Module.client"
					}
				},
				{
					"id": 528,
					"name": "emitter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitterType"
					}
				},
				{
					"id": 533,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 425,
						"name": "Module.name"
					}
				},
				{
					"id": 529,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 530,
					"name": "runEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 21,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 531,
							"name": "runEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 532,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						525
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						534,
						528,
						533,
						529
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						530
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/events/Event.ts",
					"line": 10,
					"character": 22
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 421,
					"name": "Module"
				}
			]
		},
		{
			"id": 535,
			"name": "EventHandler",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 543,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/EventHandler.ts",
							"line": 12,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 544,
							"name": "new EventHandler",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 545,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 546,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 384,
										"name": "BaseHandlerOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							},
							"overwrites": {
								"type": "reference",
								"id": 400,
								"name": "BaseHandler.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 399,
						"name": "BaseHandler.constructor"
					}
				},
				{
					"id": 558,
					"name": "classToLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 21,
							"character": 11
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 421,
							"name": "Module"
						}
					},
					"defaultValue": "Module",
					"inheritedFrom": {
						"type": "reference",
						"id": 405,
						"name": "BaseHandler.classToLoad"
					}
				},
				{
					"id": 557,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 20,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 404,
						"name": "BaseHandler.client"
					}
				},
				{
					"id": 559,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 22,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "'./'",
					"inheritedFrom": {
						"type": "reference",
						"id": 406,
						"name": "BaseHandler.directory"
					}
				},
				{
					"id": 547,
					"name": "emitters",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/EventHandler.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "EventEmitterType"
							},
							{
								"type": "reference",
								"qualifiedName": "EventEmitter",
								"package": "@types/node",
								"name": "EventEmitter"
							}
						],
						"qualifiedName": "Collection",
						"package": "@discordjs/collection",
						"name": "Collection"
					}
				},
				{
					"id": 560,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"qualifiedName": "Set",
						"package": "typescript",
						"name": "Set"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"id": 407,
						"name": "BaseHandler.extensions"
					}
				},
				{
					"id": 561,
					"name": "modules",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 24,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"id": 524,
								"name": "Event"
							}
						],
						"qualifiedName": "Collection",
						"package": "@discordjs/collection",
						"name": "Collection"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 408,
						"name": "BaseHandler.modules"
					}
				},
				{
					"id": 551,
					"name": "addToEmitter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/EventHandler.ts",
							"line": 28,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 552,
							"name": "addToEmitter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 553,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 562,
					"name": "load",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 45,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 563,
							"name": "load",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 564,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 413,
								"name": "BaseHandler.load"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 412,
						"name": "BaseHandler.load"
					}
				},
				{
					"id": 565,
					"name": "loadAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 57,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 566,
							"name": "loadAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 567,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 416,
								"name": "BaseHandler.loadAll"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 415,
						"name": "BaseHandler.loadAll"
					}
				},
				{
					"id": 548,
					"name": "register",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/EventHandler.ts",
							"line": 21,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 549,
							"name": "register",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 550,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 421,
												"name": "Module"
											},
											{
												"type": "reference",
												"id": 419,
												"name": "ModuleOptions"
											}
										],
										"name": "RawModule"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							},
							"overwrites": {
								"type": "reference",
								"id": 410,
								"name": "BaseHandler.register"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 409,
						"name": "BaseHandler.register"
					}
				},
				{
					"id": 554,
					"name": "removeFromEmitter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/EventHandler.ts",
							"line": 54,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 555,
							"name": "removeFromEmitter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 556,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 535,
								"name": "EventHandler"
							}
						}
					]
				},
				{
					"id": 536,
					"name": "getDeploymentData",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 85,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 537,
							"name": "getDeploymentData",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 538,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 539,
									"name": "extensions",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"qualifiedName": "Set",
										"package": "typescript",
										"name": "Set"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"typeArguments": [
												{
													"type": "reference",
													"id": 419,
													"name": "ModuleOptions"
												}
											],
											"qualifiedName": "Readonly",
											"package": "typescript",
											"name": "Readonly"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 393,
								"name": "BaseHandler.getDeploymentData"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 392,
						"name": "BaseHandler.getDeploymentData"
					}
				},
				{
					"id": 540,
					"name": "readdirRecursive",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 99,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 541,
							"name": "readdirRecursive",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 542,
									"name": "directory",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 397,
								"name": "BaseHandler.readdirRecursive"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 396,
						"name": "BaseHandler.readdirRecursive"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						543
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						558,
						557,
						559,
						547,
						560,
						561
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						551,
						562,
						565,
						548,
						554,
						536,
						540
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/events/EventHandler.ts",
					"line": 9,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 391,
					"typeArguments": [
						{
							"type": "reference",
							"id": 524,
							"name": "Event"
						}
					],
					"name": "BaseHandler"
				}
			]
		},
		{
			"id": 301,
			"name": "Item",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 311,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 16,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 312,
							"name": "new Item",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 313,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "item",
										"package": ".prisma",
										"name": "item"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 301,
								"name": "Item"
							}
						}
					]
				},
				{
					"id": 314,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"implementationOf": {
						"type": "reference",
						"name": "item.dbid"
					}
				},
				{
					"id": 316,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "item.description"
					}
				},
				{
					"id": 315,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"implementationOf": {
						"type": "reference",
						"name": "item.name"
					}
				},
				{
					"id": 317,
					"name": "price",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"implementationOf": {
						"type": "reference",
						"name": "item.price"
					}
				},
				{
					"id": 302,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 13,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 303,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 14,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 318,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 42,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 307,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 30,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 308,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 309,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 310,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 301,
												"name": "Item"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 304,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Item.ts",
							"line": 24,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 305,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 306,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						311
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						314,
						316,
						315,
						317,
						302,
						303
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						318,
						307,
						304
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/Item.ts",
					"line": 6,
					"character": 13
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"qualifiedName": "item",
					"package": ".prisma",
					"name": "item"
				}
			]
		},
		{
			"id": 19,
			"name": "KauriClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"decorators": [
				{
					"name": "singleton",
					"type": {
						"type": "reference",
						"qualifiedName": "singleton",
						"package": "tsyringe",
						"name": "singleton"
					},
					"arguments": {}
				}
			],
			"children": [
				{
					"id": 50,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/KauriClient.ts",
							"line": 17,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 51,
							"name": "new KauriClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 52,
									"name": "database",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "inject",
											"type": {
												"type": "reference",
												"qualifiedName": "inject",
												"package": "tsyringe",
												"name": "inject"
											},
											"arguments": {
												"token": "'PrismaClient'"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Prisma.PrismaClientOptions",
												"package": ".prisma",
												"name": "PrismaClientOptions"
											},
											{
												"type": "intrinsic",
												"name": "never"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "reference",
														"qualifiedName": "Prisma.RejectOnNotFound",
														"package": ".prisma",
														"name": "RejectOnNotFound"
													},
													{
														"type": "reference",
														"qualifiedName": "Prisma.RejectPerOperation",
														"package": ".prisma",
														"name": "RejectPerOperation"
													}
												]
											}
										],
										"qualifiedName": "PrismaClient",
										"package": ".prisma",
										"name": "PrismaClient"
									}
								},
								{
									"id": 53,
									"name": "logger",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "inject",
											"type": {
												"type": "reference",
												"qualifiedName": "inject",
												"package": "tsyringe",
												"name": "inject"
											},
											"arguments": {
												"token": "'Logger'"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 218,
										"name": "Logger"
									}
								},
								{
									"id": 54,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"decorators": [
										{
											"name": "inject",
											"type": {
												"type": "reference",
												"qualifiedName": "inject",
												"package": "tsyringe",
												"name": "inject"
											},
											"arguments": {
												"token": "'KauriClientOptions'"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1,
										"name": "KauriClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"overwrites": {
								"type": "reference",
								"name": "Client.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Client.constructor"
					}
				},
				{
					"id": 58,
					"name": "application",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 726,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "ClientApplication",
								"package": "discord.js",
								"name": "ClientApplication"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.application"
					}
				},
				{
					"id": 59,
					"name": "channels",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 727,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ChannelManager",
						"package": "discord.js",
						"name": "ChannelManager"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.channels"
					}
				},
				{
					"id": 55,
					"name": "commandHandler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/KauriClient.ts",
							"line": 15,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 459,
						"name": "CommandHandler"
					}
				},
				{
					"id": 56,
					"name": "database",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "Prisma.PrismaClientOptions",
								"package": ".prisma",
								"name": "PrismaClientOptions"
							},
							{
								"type": "intrinsic",
								"name": "never"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"qualifiedName": "Prisma.RejectOnNotFound",
										"package": ".prisma",
										"name": "RejectOnNotFound"
									},
									{
										"type": "reference",
										"qualifiedName": "Prisma.RejectPerOperation",
										"package": ".prisma",
										"name": "RejectPerOperation"
									}
								]
							}
						],
						"qualifiedName": "PrismaClient",
						"package": ".prisma",
						"name": "PrismaClient"
					}
				},
				{
					"id": 62,
					"name": "guilds",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 729,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "GuildManager",
						"package": "discord.js",
						"name": "GuildManager"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.guilds"
					}
				},
				{
					"id": 57,
					"name": "logger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"type": {
						"type": "reference",
						"id": 218,
						"name": "Logger"
					}
				},
				{
					"id": 63,
					"name": "options",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 730,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ClientOptions",
						"package": "discord.js",
						"name": "ClientOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.options"
					}
				},
				{
					"id": 66,
					"name": "readyTimestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 732,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.readyTimestamp"
					}
				},
				{
					"id": 173,
					"name": "rest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 366,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "REST",
						"package": "@discordjs/rest",
						"name": "REST"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.rest"
					}
				},
				{
					"id": 68,
					"name": "shard",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 734,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "ShardClientUtil",
								"package": "discord.js",
								"name": "ShardClientUtil"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.shard"
					}
				},
				{
					"id": 67,
					"name": "sweepers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 733,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "Sweepers",
						"package": "discord.js",
						"name": "Sweepers"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.sweepers"
					}
				},
				{
					"id": 69,
					"name": "token",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 735,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.token"
					}
				},
				{
					"id": 72,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 737,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "ClientUser",
								"package": "discord.js",
								"name": "ClientUser"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.user"
					}
				},
				{
					"id": 73,
					"name": "users",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 738,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "UserManager",
						"package": "discord.js",
						"name": "UserManager"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.users"
					}
				},
				{
					"id": 74,
					"name": "voice",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 739,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "ClientVoiceManager",
						"package": "discord.js",
						"name": "ClientVoiceManager"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.voice"
					}
				},
				{
					"id": 75,
					"name": "ws",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 740,
							"character": 9
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "WebSocketManager",
						"package": "discord.js",
						"name": "WebSocketManager"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.ws"
					}
				},
				{
					"id": 47,
					"name": "captureRejectionSymbol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 301,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 47,
							"qualifiedName": "EventEmitter.captureRejectionSymbol",
							"package": "@types/node",
							"name": "captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.captureRejectionSymbol"
					}
				},
				{
					"id": 48,
					"name": "captureRejections",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"shortText": "Sets or gets the default captureRejection value for all emitters."
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 306,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.captureRejections"
					}
				},
				{
					"id": 49,
					"name": "defaultMaxListeners",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 307,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.defaultMaxListeners"
					}
				},
				{
					"id": 46,
					"name": "errorMonitor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"shortText": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.",
						"text": "Installing a listener using this symbol does not change the behavior once an\n`'error'` event is emitted, therefore the process will still crash if no\nregular `'error'` listener is installed.\n"
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 300,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 46,
							"qualifiedName": "EventEmitter.errorMonitor",
							"package": "@types/node",
							"name": "errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.errorMonitor"
					}
				},
				{
					"id": 60,
					"name": "emojis",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 728,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 61,
							"name": "emojis",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"qualifiedName": "BaseGuildEmojiManager",
								"package": "discord.js",
								"name": "BaseGuildEmojiManager"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.emojis"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.emojis"
					}
				},
				{
					"id": 64,
					"name": "readyAt",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 731,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 65,
							"name": "readyAt",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Client.Ready",
										"package": "discord.js",
										"name": "Ready"
									},
									{
										"type": "reference",
										"qualifiedName": "Date",
										"package": "typescript",
										"name": "Date"
									},
									{
										"type": "literal",
										"value": null
									}
								],
								"qualifiedName": "If",
								"package": "discord.js",
								"name": "If"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.readyAt"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.readyAt"
					}
				},
				{
					"id": 70,
					"name": "uptime",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 736,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 71,
							"name": "uptime",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Client.Ready",
										"package": "discord.js",
										"name": "Ready"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								],
								"qualifiedName": "If",
								"package": "discord.js",
								"name": "If"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.uptime"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.uptime"
					}
				},
				{
					"id": 174,
					"name": "addListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 175,
							"name": "addListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Alias for `emitter.on(eventName, listener)`.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 176,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 177,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 179,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 180,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.addListener"
					}
				},
				{
					"id": 76,
					"name": "destroy",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 741,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "destroy",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.destroy"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.destroy"
					}
				},
				{
					"id": 142,
					"name": "emit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 767,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 143,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 144,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 145,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 144,
										"qualifiedName": "K",
										"package": "discord.js",
										"name": "K"
									}
								},
								{
									"id": 146,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"id": 144,
											"qualifiedName": "K",
											"package": "discord.js",
											"name": "K"
										},
										"objectType": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.emit"
							}
						},
						{
							"id": 147,
							"name": "emit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 148,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 149,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 148,
												"qualifiedName": "S",
												"package": "discord.js",
												"name": "S"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"qualifiedName": "ClientEvents",
													"package": "discord.js",
													"name": "ClientEvents"
												}
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								},
								{
									"id": 150,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.emit"
					}
				},
				{
					"id": 216,
					"name": "eventNames",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 217,
							"name": "eventNames",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.",
								"text": "```js\nconst EventEmitter = require('events');\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0\n"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.eventNames"
					}
				},
				{
					"id": 78,
					"name": "fetchGuildPreview",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 742,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "fetchGuildPreview",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 80,
									"name": "guild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GuildResolvable",
										"package": "discord.js",
										"name": "GuildResolvable"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "GuildPreview",
										"package": "discord.js",
										"name": "GuildPreview"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildPreview"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildPreview"
					}
				},
				{
					"id": 85,
					"name": "fetchGuildTemplate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 744,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "fetchGuildTemplate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 87,
									"name": "template",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "GuildTemplate",
										"package": "discord.js",
										"name": "GuildTemplate"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildTemplate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildTemplate"
					}
				},
				{
					"id": 99,
					"name": "fetchGuildWidget",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 749,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 100,
							"name": "fetchGuildWidget",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 101,
									"name": "guild",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "GuildResolvable",
										"package": "discord.js",
										"name": "GuildResolvable"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Widget",
										"package": "discord.js",
										"name": "Widget"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchGuildWidget"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchGuildWidget"
					}
				},
				{
					"id": 81,
					"name": "fetchInvite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 743,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "fetchInvite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 83,
									"name": "invite",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 84,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "ClientFetchInviteOptions",
										"package": "discord.js",
										"name": "ClientFetchInviteOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Invite",
										"package": "discord.js",
										"name": "Invite"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchInvite"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchInvite"
					}
				},
				{
					"id": 93,
					"name": "fetchPremiumStickerPacks",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 747,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "fetchPremiumStickerPacks",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "StickerPack",
												"package": "discord.js",
												"name": "StickerPack"
											}
										],
										"qualifiedName": "Collection",
										"package": "@discordjs/collection",
										"name": "Collection"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchPremiumStickerPacks"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchPremiumStickerPacks"
					}
				},
				{
					"id": 90,
					"name": "fetchSticker",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 746,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 91,
							"name": "fetchSticker",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 92,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Sticker",
										"package": "discord.js",
										"name": "Sticker"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchSticker"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchSticker"
					}
				},
				{
					"id": 88,
					"name": "fetchVoiceRegions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 745,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "fetchVoiceRegions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"qualifiedName": "VoiceRegion",
												"package": "discord.js",
												"name": "VoiceRegion"
											}
										],
										"qualifiedName": "Collection",
										"package": "@discordjs/collection",
										"name": "Collection"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchVoiceRegions"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchVoiceRegions"
					}
				},
				{
					"id": 95,
					"name": "fetchWebhook",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 748,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 96,
							"name": "fetchWebhook",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 97,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 98,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"qualifiedName": "Webhook",
										"package": "discord.js",
										"name": "Webhook"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.fetchWebhook"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.fetchWebhook"
					}
				},
				{
					"id": 102,
					"name": "generateInvite",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 750,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "generateInvite",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 104,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "InviteGenerationOptions",
										"package": "discord.js",
										"name": "InviteGenerationOptions"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.generateInvite"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.generateInvite"
					}
				},
				{
					"id": 191,
					"name": "getMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 192,
							"name": "getMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
								"tags": [
									{
										"tag": "since",
										"text": "v1.0.0\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.getMaxListeners"
					}
				},
				{
					"id": 108,
					"name": "isReady",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 752,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 109,
							"name": "isReady",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "predicate",
								"name": "this",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "literal",
											"value": true
										}
									],
									"qualifiedName": "Client",
									"package": "discord.js",
									"name": "Client"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.isReady"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.isReady"
					}
				},
				{
					"id": 199,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 200,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns the number of listeners listening to the event named `eventName`.",
								"tags": [
									{
										"tag": "since",
										"text": "v3.2.0"
									}
								]
							},
							"parameters": [
								{
									"id": 201,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event being listened for\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listenerCount"
					}
				},
				{
					"id": 193,
					"name": "listeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 194,
							"name": "listeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 195,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Function",
									"package": "typescript",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listeners"
					}
				},
				{
					"id": 105,
					"name": "login",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 751,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "login",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 107,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.login"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.login"
					}
				},
				{
					"id": 151,
					"name": "off",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 770,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 153,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 153,
										"qualifiedName": "K",
										"package": "discord.js",
										"name": "K"
									}
								},
								{
									"id": 155,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 156,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 157,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 158,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 153,
																	"qualifiedName": "K",
																	"package": "discord.js",
																	"name": "K"
																},
																"objectType": {
																	"type": "reference",
																	"qualifiedName": "ClientEvents",
																	"package": "discord.js",
																	"name": "ClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.off"
							}
						},
						{
							"id": 159,
							"name": "off",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 160,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 161,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 160,
												"qualifiedName": "S",
												"package": "discord.js",
												"name": "S"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"qualifiedName": "ClientEvents",
													"package": "discord.js",
													"name": "ClientEvents"
												}
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								},
								{
									"id": 162,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 163,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 164,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 165,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.off"
					}
				},
				{
					"id": 112,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 755,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 114,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 114,
										"qualifiedName": "K",
										"package": "discord.js",
										"name": "K"
									}
								},
								{
									"id": 116,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 117,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 118,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 119,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 114,
																	"qualifiedName": "K",
																	"package": "discord.js",
																	"name": "K"
																},
																"objectType": {
																	"type": "reference",
																	"qualifiedName": "ClientEvents",
																	"package": "discord.js",
																	"name": "ClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.on"
							}
						},
						{
							"id": 120,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 121,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 121,
												"qualifiedName": "S",
												"package": "discord.js",
												"name": "S"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"qualifiedName": "ClientEvents",
													"package": "discord.js",
													"name": "ClientEvents"
												}
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								},
								{
									"id": 123,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 124,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 125,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 126,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.on"
					}
				},
				{
					"id": 127,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 761,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 129,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 130,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"id": 129,
										"qualifiedName": "K",
										"package": "discord.js",
										"name": "K"
									}
								},
								{
									"id": 131,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 132,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 133,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 134,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"id": 129,
																	"qualifiedName": "K",
																	"package": "discord.js",
																	"name": "K"
																},
																"objectType": {
																	"type": "reference",
																	"qualifiedName": "ClientEvents",
																	"package": "discord.js",
																	"name": "ClientEvents"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						},
						{
							"id": 135,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 136,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 136,
												"qualifiedName": "S",
												"package": "discord.js",
												"name": "S"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"qualifiedName": "ClientEvents",
													"package": "discord.js",
													"name": "ClientEvents"
												}
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								},
								{
									"id": 138,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 139,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 140,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 141,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"qualifiedName": "Awaitable",
														"package": "discord.js",
														"name": "Awaitable"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.once"
					}
				},
				{
					"id": 202,
					"name": "prependListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 203,
							"name": "prependListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.",
								"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 204,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 205,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 206,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 207,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 208,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.prependListener"
					}
				},
				{
					"id": 209,
					"name": "prependOnceListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 210,
							"name": "prependOnceListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.",
								"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v6.0.0"
									}
								]
							},
							"parameters": [
								{
									"id": 211,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 212,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The callback function\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 213,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 214,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 215,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.prependOnceListener"
					}
				},
				{
					"id": 196,
					"name": "rawListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 197,
							"name": "rawListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).",
								"text": "```js\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v9.4.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 198,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Function",
									"package": "typescript",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.rawListeners"
					}
				},
				{
					"id": 166,
					"name": "removeAllListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 776,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 167,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 168,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"qualifiedName": "ClientEvents",
											"package": "discord.js",
											"name": "ClientEvents"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 169,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 168,
										"qualifiedName": "K",
										"package": "discord.js",
										"name": "K"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						},
						{
							"id": 170,
							"name": "removeAllListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 171,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 172,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 171,
												"qualifiedName": "S",
												"package": "discord.js",
												"name": "S"
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"qualifiedName": "ClientEvents",
													"package": "discord.js",
													"name": "ClientEvents"
												}
											}
										],
										"qualifiedName": "Exclude",
										"package": "typescript",
										"name": "Exclude"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.removeAllListeners"
					}
				},
				{
					"id": 181,
					"name": "removeListener",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 182,
							"name": "removeListener",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Removes the specified `listener` from the listener array for the event named`eventName`.",
								"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```\n\n`removeListener()` will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified `eventName`, then `removeListener()` must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any`removeListener()` or `removeAllListeners()` calls _after_ emitting and_before_ the last listener finishes execution will\nnot remove them from`emit()` in progress. Subsequent events behave as expected.\n\n```js\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe `emitter.listeners()` method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), `removeListener()` will remove the most\nrecently added instance. In the example the `once('ping')`listener is removed:\n\n```js\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```\n\nReturns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.1.26\n"
									}
								]
							},
							"parameters": [
								{
									"id": 183,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 184,
									"name": "listener",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 185,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExternal": true
											},
											"signatures": [
												{
													"id": 186,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {
														"isExternal": true
													},
													"parameters": [
														{
															"id": 187,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.removeListener"
					}
				},
				{
					"id": 188,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 189,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
								"text": "Returns a reference to the `EventEmitter`, so that calls can be chained.",
								"tags": [
									{
										"tag": "since",
										"text": "v0.3.5\n"
									}
								]
							},
							"parameters": [
								{
									"id": 190,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 19,
								"name": "KauriClient"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.setMaxListeners"
					}
				},
				{
					"id": 110,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 753,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.toJSON"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.toJSON"
					}
				},
				{
					"id": 38,
					"name": "getEventListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 270,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "getEventListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Returns a copy of the array of listeners for the event named `eventName`.",
								"text": "For `EventEmitter`s this behaves exactly the same as calling `.listeners` on\nthe emitter.\n\nFor `EventTarget`s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n```js\nconst { getEventListeners, EventEmitter } = require('events');\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  getEventListeners(ee, 'foo'); // [listener]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  getEventListeners(et, 'foo'); // [listener]\n}\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v15.2.0, v14.17.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 40,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"qualifiedName": "global.NodeJS.EventEmitter",
												"package": "@types/node",
												"name": "EventEmitter"
											},
											{
												"type": "reference",
												"qualifiedName": "DOMEventTarget",
												"package": "@types/node",
												"name": "DOMEventTarget"
											}
										]
									}
								},
								{
									"id": 41,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "Function",
									"package": "typescript",
									"name": "Function"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.getEventListeners"
					}
				},
				{
					"id": 34,
					"name": "listenerCount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 242,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "listenerCount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.",
								"text": "```js\nconst { EventEmitter, listenerCount } = require('events');\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v0.9.12"
									},
									{
										"tag": "deprecated",
										"text": "Since v3.2.0 - Use `listenerCount` instead."
									}
								]
							},
							"parameters": [
								{
									"id": 36,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The emitter to query"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node",
										"name": "EventEmitter"
									}
								},
								{
									"id": 37,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The event name\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.listenerCount"
					}
				},
				{
					"id": 29,
					"name": "on",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 221,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "on",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "```js\nconst { on, EventEmitter } = require('events');",
								"text": "(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo')) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n```\n\nReturns an `AsyncIterator` that iterates `eventName` events. It will throw\nif the `EventEmitter` emits `'error'`. It removes all listeners when\nexiting the loop. The `value` returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn `AbortSignal` can be used to cancel waiting on events:\n\n```js\nconst { on, EventEmitter } = require('events');\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```",
								"returns": "that iterates `eventName` events emitted by the `emitter`\n",
								"tags": [
									{
										"tag": "since",
										"text": "v13.6.0, v12.16.0"
									}
								]
							},
							"parameters": [
								{
									"id": 31,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "global.NodeJS.EventEmitter",
										"package": "@types/node",
										"name": "EventEmitter"
									}
								},
								{
									"id": 32,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"comment": {
										"shortText": "The name of the event being listened for"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"qualifiedName": "AsyncIterableIterator",
								"package": "typescript",
								"name": "AsyncIterableIterator"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.on"
					}
				},
				{
					"id": 20,
					"name": "once",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 157,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.",
								"text": "This method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special`'error'` event\nsemantics and does not listen to the `'error'` event.\n\n```js\nconst { once, EventEmitter } = require('events');\n\nasync function run() {\n  const ee = new EventEmitter();\n\n  process.nextTick(() => {\n    ee.emit('myevent', 42);\n  });\n\n  const [value] = await once(ee, 'myevent');\n  console.log(value);\n\n  const err = new Error('kaboom');\n  process.nextTick(() => {\n    ee.emit('error', err);\n  });\n\n  try {\n    await once(ee, 'myevent');\n  } catch (err) {\n    console.log('error happened', err);\n  }\n}\n\nrun();\n```\n\nThe special handling of the `'error'` event is only used when `events.once()`is used to wait for another event. If `events.once()` is used to wait for the\n'`error'` event itself, then it is treated as any other kind of event without\nspecial handling:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.log('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```\n\nAn `AbortSignal` can be used to cancel waiting for the event:\n\n```js\nconst { EventEmitter, once } = require('events');\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v11.13.0, v10.16.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 22,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "NodeEventTarget",
										"package": "@types/node",
										"name": "NodeEventTarget"
									}
								},
								{
									"id": 23,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 24,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						},
						{
							"id": 25,
							"name": "once",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 26,
									"name": "emitter",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "DOMEventTarget",
										"package": "@types/node",
										"name": "DOMEventTarget"
									}
								},
								{
									"id": 27,
									"name": "eventName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "StaticEventEmitterOptions",
										"package": "@types/node",
										"name": "StaticEventEmitterOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.once"
					}
				},
				{
					"id": 42,
					"name": "setMaxListeners",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/events.d.ts",
							"line": 290,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "setMaxListeners",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"comment": {
								"shortText": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `EventEmitter.setMaxListeners()` method allows the default limit to be\nmodified (if eventTargets is empty) or modify the limit specified in every `EventTarget` | `EventEmitter` passed as arguments.\nThe value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
								"text": "```js\nEventEmitter.setMaxListeners(20);\n// Equivalent to\nEventEmitter.defaultMaxListeners = 20;\n\nconst eventTarget = new EventTarget();\n// Only way to increase limit for `EventTarget` instances\n// as these doesn't expose its own `setMaxListeners` method\nEventEmitter.setMaxListeners(20, eventTarget);\n```",
								"tags": [
									{
										"tag": "since",
										"text": "v15.3.0, v14.17.0\n"
									}
								]
							},
							"parameters": [
								{
									"id": 44,
									"name": "n",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 45,
									"name": "eventTargets",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"qualifiedName": "global.NodeJS.EventEmitter",
													"package": "@types/node",
													"name": "EventEmitter"
												},
												{
													"type": "reference",
													"qualifiedName": "DOMEventTarget",
													"package": "@types/node",
													"name": "DOMEventTarget"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Client.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Client.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						50
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						58,
						59,
						55,
						56,
						62,
						57,
						63,
						66,
						173,
						68,
						67,
						69,
						72,
						73,
						74,
						75,
						47,
						48,
						49,
						46
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						60,
						64,
						70
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						174,
						76,
						142,
						216,
						78,
						85,
						99,
						81,
						93,
						90,
						88,
						95,
						102,
						191,
						108,
						199,
						193,
						105,
						151,
						112,
						127,
						202,
						209,
						196,
						166,
						181,
						188,
						110,
						38,
						34,
						29,
						20,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/client/KauriClient.ts",
					"line": 14,
					"character": 13
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "Client",
					"package": "discord.js",
					"name": "Client"
				}
			]
		},
		{
			"id": 218,
			"name": "Logger",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 219,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 220,
							"name": "new Logger",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"type": {
								"type": "reference",
								"id": 218,
								"name": "Logger"
							}
						}
					]
				},
				{
					"id": 232,
					"name": "captureEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/Logger.ts",
							"line": 51,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 233,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 234,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Captures a manually created event and sends it to Sentry.",
										"returns": "The generated eventId.\n"
									},
									"parameters": [
										{
											"id": 235,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The event to send to Sentry."
											},
											"type": {
												"type": "reference",
												"qualifiedName": "Event",
												"package": "@sentry/types",
												"name": "Event"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"defaultValue": "captureEvent"
				},
				{
					"id": 236,
					"name": "captureException",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/Logger.ts",
							"line": 52,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 237,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 238,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Captures an exception event and sends it to Sentry.",
										"returns": "The generated eventId.\n"
									},
									"parameters": [
										{
											"id": 239,
											"name": "exception",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "An exception-like object."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 240,
											"name": "captureContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "CaptureContext",
												"package": "@sentry/types",
												"name": "CaptureContext"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"defaultValue": "captureException"
				},
				{
					"id": 227,
					"name": "captureMessage",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/Logger.ts",
							"line": 50,
							"character": 8
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 228,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 229,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Captures a message event and sends it to Sentry.",
										"returns": "The generated eventId.\n"
									},
									"parameters": [
										{
											"id": 230,
											"name": "message",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"shortText": "The message to send to Sentry."
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 231,
											"name": "captureContext",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"qualifiedName": "Severity",
														"package": "@sentry/types",
														"name": "Severity"
													},
													{
														"type": "reference",
														"qualifiedName": "CaptureContext",
														"package": "@sentry/types",
														"name": "CaptureContext"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					},
					"defaultValue": "captureMessage"
				},
				{
					"id": 221,
					"name": "logCommand",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/Logger.ts",
							"line": 22,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "logCommand",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 223,
									"name": "interaction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "CacheType",
												"package": "discord.js",
												"name": "CacheType"
											}
										],
										"qualifiedName": "CommandInteraction",
										"package": "discord.js",
										"name": "CommandInteraction"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 224,
					"name": "logEvent",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/client/Logger.ts",
							"line": 36,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "logEvent",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 226,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						219
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						232,
						236,
						227
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						221,
						224
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/client/Logger.ts",
					"line": 21,
					"character": 13
				}
			]
		},
		{
			"id": 421,
			"name": "Module",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 422,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 12,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 423,
							"name": "new Module",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 424,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 421,
								"name": "Module"
							}
						}
					]
				},
				{
					"id": 426,
					"name": "client",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"id": 19,
						"name": "KauriClient"
					}
				},
				{
					"id": 425,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						422
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						426,
						425
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/Module.ts",
					"line": 8,
					"character": 22
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 431,
					"name": "Command"
				},
				{
					"type": "reference",
					"id": 524,
					"name": "Event"
				}
			]
		},
		{
			"id": 320,
			"name": "Species",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 330,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 96,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 331,
							"name": "new Species",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 332,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "SpeciesData"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 320,
								"name": "Species"
							}
						}
					]
				},
				{
					"id": 338,
					"name": "abilities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 66,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "SpeciesAbility"
						}
					}
				},
				{
					"id": 341,
					"name": "attack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 72,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 339,
					"name": "attacks",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 67,
							"character": 8
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"name": "SpeciesAttack"
						}
					}
				},
				{
					"id": 333,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 59,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 342,
					"name": "defense",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 73,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 334,
					"name": "dex_number",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 60,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 346,
					"name": "height",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 78,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 340,
					"name": "hp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 71,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 335,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 61,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 343,
					"name": "special_attack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 74,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 344,
					"name": "special_defense",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 75,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 345,
					"name": "speed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 76,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 336,
					"name": "type1",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 64,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "type",
						"package": ".prisma",
						"name": "type"
					}
				},
				{
					"id": 337,
					"name": "type2",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 65,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"qualifiedName": "type",
								"package": ".prisma",
								"name": "type"
							}
						]
					}
				},
				{
					"id": 347,
					"name": "weight",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 79,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 321,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 91,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 322,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 92,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 348,
					"name": "suffix",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 229,
							"character": 12
						}
					],
					"getSignature": [
						{
							"id": 349,
							"name": "suffix",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 350,
					"name": "attacksByMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 239,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "attacksByMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 352,
									"name": "method",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 353,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 255,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 354,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 355,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 356,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 357,
									"name": "rating",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 358,
					"name": "learnset",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 307,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 359,
							"name": "learnset",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 360,
									"name": "query",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 361,
									"name": "rating",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 326,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 140,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 327,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 328,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 329,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 320,
												"name": "Species"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 323,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Species.ts",
							"line": 134,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 325,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						330
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						338,
						341,
						339,
						333,
						342,
						334,
						346,
						340,
						335,
						343,
						344,
						345,
						336,
						337,
						347,
						321,
						322
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						348
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						350,
						353,
						358,
						326,
						323
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/Species.ts",
					"line": 58,
					"character": 13
				}
			]
		},
		{
			"id": 362,
			"name": "Weather",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 372,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 17,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 373,
							"name": "new Weather",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"parameters": [
								{
									"id": 374,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "weather",
										"package": ".prisma",
										"name": "weather"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 362,
								"name": "Weather"
							}
						}
					]
				},
				{
					"id": 380,
					"name": "code",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 12,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 378,
					"name": "color",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 10,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 375,
					"name": "dbid",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 7,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 377,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 9,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 379,
					"name": "emoji",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 11,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 376,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 363,
					"name": "list",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 14,
							"character": 16
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 364,
					"name": "listLastFetched",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 15,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 381,
					"name": "info",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 43,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 382,
							"name": "info",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 383,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "APIEmbed",
								"package": "discord-api-types",
								"name": "APIEmbed"
							}
						}
					]
				},
				{
					"id": 368,
					"name": "fetch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 32,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 369,
							"name": "fetch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 370,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								},
								{
									"id": 371,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 362,
												"name": "Weather"
											}
										]
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 365,
					"name": "getList",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/framework/models/Weather.ts",
							"line": 26,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 366,
							"name": "getList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 367,
									"name": "client",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 19,
										"name": "KauriClient"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						372
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						380,
						378,
						375,
						377,
						379,
						376,
						363,
						364
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						381,
						368,
						365
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/models/Weather.ts",
					"line": 6,
					"character": 13
				}
			]
		},
		{
			"id": 384,
			"name": "BaseHandlerOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 385,
					"name": "classToLoad",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 10,
							"character": 1
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 421,
							"name": "Module"
						}
					}
				},
				{
					"id": 386,
					"name": "directory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 11,
							"character": 1
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 387,
					"name": "extensions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 12,
							"character": 1
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 388,
					"name": "loadFilter",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/BaseHandler.ts",
							"line": 13,
							"character": 1
						}
					],
					"signatures": [
						{
							"id": 389,
							"name": "loadFilter",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 390,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						385,
						386,
						387
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						388
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/BaseHandler.ts",
					"line": 9,
					"character": 17
				}
			]
		},
		{
			"id": 520,
			"name": "EventOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 522,
					"name": "emitter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 6,
							"character": 1
						}
					],
					"type": {
						"type": "reference",
						"name": "EventEmitterType"
					}
				},
				{
					"id": 521,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 5,
							"character": 1
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"id": 420,
						"name": "ModuleOptions.name"
					}
				},
				{
					"id": 523,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/framework/structures/events/Event.ts",
							"line": 7,
							"character": 1
						}
					],
					"type": {
						"type": "reference",
						"name": "EventBindingType"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						522,
						521,
						523
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/events/Event.ts",
					"line": 4,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"id": 419,
					"name": "ModuleOptions"
				}
			]
		},
		{
			"id": 1,
			"name": "KauriClientOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 7,
					"name": "allowedMentions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3844,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "MessageMentionOptions",
						"package": "discord.js",
						"name": "MessageMentionOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.allowedMentions"
					}
				},
				{
					"id": 2,
					"name": "commandDirectory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/client/KauriClient.ts",
							"line": 9,
							"character": 1
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3,
					"name": "eventDirectory",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/client/KauriClient.ts",
							"line": 10,
							"character": 1
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9,
					"name": "failIfNotExists",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3846,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.failIfNotExists"
					}
				},
				{
					"id": 11,
					"name": "intents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3848,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "Guilds"
									},
									{
										"type": "literal",
										"value": "GuildMembers"
									},
									{
										"type": "literal",
										"value": "GuildBans"
									},
									{
										"type": "literal",
										"value": "GuildEmojisAndStickers"
									},
									{
										"type": "literal",
										"value": "GuildIntegrations"
									},
									{
										"type": "literal",
										"value": "GuildWebhooks"
									},
									{
										"type": "literal",
										"value": "GuildInvites"
									},
									{
										"type": "literal",
										"value": "GuildVoiceStates"
									},
									{
										"type": "literal",
										"value": "GuildPresences"
									},
									{
										"type": "literal",
										"value": "GuildMessages"
									},
									{
										"type": "literal",
										"value": "GuildMessageReactions"
									},
									{
										"type": "literal",
										"value": "GuildMessageTyping"
									},
									{
										"type": "literal",
										"value": "DirectMessages"
									},
									{
										"type": "literal",
										"value": "DirectMessageReactions"
									},
									{
										"type": "literal",
										"value": "DirectMessageTyping"
									},
									{
										"type": "literal",
										"value": "MessageContent"
									},
									{
										"type": "literal",
										"value": "GuildScheduledEvents"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"qualifiedName": "BitFieldResolvable",
						"package": "discord.js",
						"name": "BitFieldResolvable"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.intents"
					}
				},
				{
					"id": 6,
					"name": "makeCache",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3843,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "CacheFactory",
						"package": "discord.js",
						"name": "CacheFactory"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.makeCache"
					}
				},
				{
					"id": 8,
					"name": "partials",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3845,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"qualifiedName": "Partials",
							"package": "discord.js",
							"name": "Partials"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.partials"
					}
				},
				{
					"id": 10,
					"name": "presence",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3847,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "PresenceData",
						"package": "discord.js",
						"name": "PresenceData"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.presence"
					}
				},
				{
					"id": 15,
					"name": "rest",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3852,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"qualifiedName": "RESTOptions",
								"package": "@discordjs/rest",
								"name": "RESTOptions"
							}
						],
						"qualifiedName": "Partial",
						"package": "typescript",
						"name": "Partial"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.rest"
					}
				},
				{
					"id": 5,
					"name": "shardCount",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3842,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.shardCount"
					}
				},
				{
					"id": 4,
					"name": "shards",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3841,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"type": "literal",
								"value": "auto"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.shards"
					}
				},
				{
					"id": 13,
					"name": "sweepers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3850,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "SweeperOptions",
						"package": "discord.js",
						"name": "SweeperOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.sweepers"
					}
				},
				{
					"id": 12,
					"name": "waitGuildTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3849,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.waitGuildTimeout"
					}
				},
				{
					"id": 14,
					"name": "ws",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3851,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "WebSocketOptions",
						"package": "discord.js",
						"name": "WebSocketOptions"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.ws"
					}
				},
				{
					"id": 16,
					"name": "jsonTransformer",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/discord.js/typings/index.d.ts",
							"line": 3853,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "jsonTransformer",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 18,
									"name": "obj",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "ClientOptions.jsonTransformer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "ClientOptions.jsonTransformer"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						7,
						2,
						3,
						9,
						11,
						6,
						8,
						10,
						15,
						5,
						4,
						13,
						12,
						14
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						16
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/client/KauriClient.ts",
					"line": 8,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"qualifiedName": "ClientOptions",
					"package": "discord.js",
					"name": "ClientOptions"
				}
			]
		},
		{
			"id": 419,
			"name": "ModuleOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 420,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/framework/structures/Module.ts",
							"line": 5,
							"character": 1
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						420
					]
				}
			],
			"sources": [
				{
					"fileName": "src/framework/structures/Module.ts",
					"line": 4,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"id": 520,
					"name": "EventOptions"
				}
			]
		},
		{
			"id": 427,
			"name": "ArgumentsOf",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/framework/structures/commands/ArgumentsOf.ts",
					"line": 91,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 430,
					"name": "C",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ReadonlyCommand"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"id": 430,
					"name": "C"
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 428,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {},
						"children": [
							{
								"id": 429,
								"name": "options",
								"kind": 1024,
								"kindString": "Property",
								"flags": {},
								"sources": [
									{
										"fileName": "src/framework/structures/commands/ArgumentsOf.ts",
										"line": 91,
										"character": 65
									}
								],
								"type": {
									"type": "typeOperator",
									"operator": "readonly",
									"target": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "ReadonlyOption"
										}
									}
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"kind": 1024,
								"children": [
									429
								]
							}
						],
						"sources": [
							{
								"fileName": "src/framework/structures/commands/ArgumentsOf.ts",
								"line": 91,
								"character": 63
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "options"
										},
										"objectType": {
											"type": "reference",
											"id": 430,
											"name": "C"
										}
									}
								}
							],
							"name": "OptionToObject"
						}
					],
					"name": "UnionToIntersection"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "unknown"
				}
			}
		},
		{
			"id": 448,
			"name": "CommandData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/framework/structures/commands/Command.ts",
					"line": 9,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"qualifiedName": "ChatInputApplicationCommandData",
						"package": "discord.js",
						"name": "ChatInputApplicationCommandData"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 449,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 450,
									"name": "defer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 10,
											"character": 1
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 451,
									"name": "global",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 11,
											"character": 1
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 452,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 12,
											"character": 1
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 454,
											"name": "CommandOptionData"
										}
									}
								},
								{
									"id": 453,
									"name": "permissions",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 13,
											"character": 1
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"qualifiedName": "ApplicationCommandPermissionData",
											"package": "discord.js",
											"name": "ApplicationCommandPermissionData"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										450,
										451,
										452,
										453
									]
								}
							],
							"sources": [
								{
									"fileName": "src/framework/structures/commands/Command.ts",
									"line": 9,
									"character": 60
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 454,
			"name": "CommandOptionData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/framework/structures/commands/Command.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"qualifiedName": "ApplicationCommandOptionData",
						"package": "discord.js",
						"name": "ApplicationCommandOptionData"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 455,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 456,
									"name": "augmentTo",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 17,
											"character": 1
										}
									],
									"type": {
										"type": "reference",
										"name": "ModelName"
									}
								},
								{
									"id": 457,
									"name": "options",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/framework/structures/commands/Command.ts",
											"line": 18,
											"character": 1
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 454,
											"name": "CommandOptionData"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										456,
										457
									]
								}
							],
							"sources": [
								{
									"fileName": "src/framework/structures/commands/Command.ts",
									"line": 16,
									"character": 63
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 458,
			"name": "CommandOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/framework/structures/commands/Command.ts",
					"line": 21,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"id": 448,
						"name": "CommandData"
					},
					{
						"type": "reference",
						"id": 419,
						"name": "ModuleOptions"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				241,
				260,
				391,
				431,
				459,
				282,
				524,
				535,
				301,
				19,
				218,
				421,
				320,
				362
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				384,
				520,
				1,
				419
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				427,
				448,
				454,
				458
			]
		}
	],
	"sources": [
		{
			"fileName": "src/framework/index.ts",
			"line": 1,
			"character": 0
		}
	]
}