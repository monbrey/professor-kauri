{"meta":{"version":"0.4.0","format":20,"date":1650270024733},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# professor-kauri","path":"README.md"}}}},"classes":[{"name":"Ability","construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["ability"]]]}],"returns":[[["Ability"]]],"meta":{"line":16,"file":"Ability.ts","path":"src/framework/models"}},"props":[{"name":"announcement","readonly":true,"type":[[["string"]]],"meta":{"line":10,"file":"Ability.ts","path":"src/framework/models"}},{"name":"dbid","readonly":true,"type":[[["number"]]],"meta":{"line":7,"file":"Ability.ts","path":"src/framework/models"}},{"name":"description","readonly":true,"type":[[["string"]]],"meta":{"line":9,"file":"Ability.ts","path":"src/framework/models"}},{"name":"name","readonly":true,"type":[[["string"]]],"meta":{"line":8,"file":"Ability.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","default":"[]","type":[[["Array","<"],["string",">"]]],"meta":{"line":13,"file":"Ability.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","default":"0","type":[[["number"]]],"meta":{"line":14,"file":"Ability.ts","path":"src/framework/models"}}],"methods":[{"name":"info","returns":[[["APIEmbed"]]],"meta":{"line":41,"file":"Ability.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["Ability",">"]]],"meta":{"line":30,"file":"Ability.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":24,"file":"Ability.ts","path":"src/framework/models"}}],"meta":{"line":6,"file":"Ability.ts","path":"src/framework/models"}},{"name":"Attack","construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["AttackData"]]]}],"returns":[[["Attack"]]],"meta":{"line":35,"file":"Attack.ts","path":"src/framework/models"}},"props":[{"name":"accuracy","type":[[["null"," | "],["number"]]],"meta":{"line":16,"file":"Attack.ts","path":"src/framework/models"}},{"name":"category","type":[[["string"]]],"meta":{"line":18,"file":"Attack.ts","path":"src/framework/models"}},{"name":"dbid","type":[[["number"]]],"meta":{"line":11,"file":"Attack.ts","path":"src/framework/models"}},{"name":"description","type":[[["string"]]],"meta":{"line":14,"file":"Attack.ts","path":"src/framework/models"}},{"name":"name","type":[[["string"]]],"meta":{"line":12,"file":"Attack.ts","path":"src/framework/models"}},{"name":"power","type":[[["null"," | "],["number"]]],"meta":{"line":15,"file":"Attack.ts","path":"src/framework/models"}},{"name":"type","type":[[["type"]]],"meta":{"line":13,"file":"Attack.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":32,"file":"Attack.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","type":[[["number"]]],"meta":{"line":33,"file":"Attack.ts","path":"src/framework/models"}}],"methods":[{"name":"info","returns":[[["APIEmbed"]]],"meta":{"line":92,"file":"Attack.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["Attack",">"]]],"meta":{"line":64,"file":"Attack.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":58,"file":"Attack.ts","path":"src/framework/models"}}],"meta":{"line":10,"file":"Attack.ts","path":"src/framework/models"}},{"name":"BaseHandler","description":"Module handler heavily inspired by (basically just modified from) Akairo\nCredit to {@link https://github.com/discord-akairo/discord-akairo}","construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"options","optional":false,"type":[[["BaseHandlerOptions"]]]}],"returns":[[["BaseHandler","<"],["T",">"]]],"meta":{"line":26,"file":"BaseHandler.ts","path":"src/framework/structures"}},"props":[{"name":"classToLoad","default":"Module","type":[[["("],["typeof"," "],["Module",")"]]],"meta":{"line":21,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"client","type":[[["KauriClient"]]],"meta":{"line":20,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"directory","default":"'./'","type":[[["string"]]],"meta":{"line":22,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"extensions","type":[[["Set","<"],["string",">"]]],"meta":{"line":23,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"modules","type":[[["Collection","<"],["string",", "],["T",">"]]],"meta":{"line":24,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"methods":[{"name":"load","params":[{"name":"path","optional":false,"type":[[["string"]]]}],"returns":[[["BaseHandler","<"],["T",">"]]],"meta":{"line":45,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"loadAll","params":[{"name":"directory","optional":true,"type":[[["string"]]]}],"returns":[[["BaseHandler","<"],["T",">"]]],"meta":{"line":57,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"register","params":[{"name":"module","optional":false,"type":[[["RawModule","<"],["Module",", "],["ModuleOptions",">"]]]}],"returns":[[["BaseHandler","<"],["T",">"]]],"meta":{"line":37,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"getDeploymentData","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]},{"name":"extensions","optional":true,"type":[[["Set","<"],["string",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["Readonly","<"],["ModuleOptions",">>>"]]],"meta":{"line":85,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"readdirRecursive","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":99,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"meta":{"line":19,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"Command","extends":["Module"],"construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["CommandOptions"]]]}],"returns":[[["Command"]]],"meta":{"line":28,"file":"Command.ts","path":"src/framework/structures/commands"}},"props":[{"name":"client","type":[[["KauriClient"]]],"meta":{"line":10,"file":"Module.ts","path":"src/framework/structures"}},{"name":"defaultPermission","type":[[["boolean"]]],"meta":{"line":25,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"description","type":[[["string"]]],"meta":{"line":24,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"name","type":[[["string"]]],"meta":{"line":9,"file":"Module.ts","path":"src/framework/structures"}},{"name":"options","type":[[["Array","<"],["CommandOptionData",">"]]],"meta":{"line":26,"file":"Command.ts","path":"src/framework/structures/commands"}}],"methods":[{"name":"runAutocomplete","params":[{"name":"interaction","optional":false,"type":[[["AutocompleteInteraction","<"],["'cached'",">"]]]},{"name":"arg","optional":false,"type":[[["ApplicationCommandOptionChoiceData"]]]}],"returns":[[["void"]]],"meta":{"line":6,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"runCommand","params":[{"name":"interaction","optional":false,"type":[[["CommandInteraction","<"],["'cached'",">"]]]},{"name":"args","optional":true,"type":[[["unknown"]]]}],"returns":[[["void"]]],"meta":{"line":38,"file":"Command.ts","path":"src/framework/structures/commands"}}],"meta":{"line":23,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"CommandHandler","extends":["BaseHandler<Command>"],"construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"options","optional":false,"type":[[["BaseHandlerOptions"]]]}],"returns":[[["CommandHandler"]]],"meta":{"line":10,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},"props":[{"name":"classToLoad","default":"Module","type":[[["("],["typeof"," "],["Module",")"]]],"meta":{"line":21,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"client","type":[[["KauriClient"]]],"meta":{"line":20,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"directory","default":"'./'","type":[[["string"]]],"meta":{"line":22,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"extensions","type":[[["Set","<"],["string",">"]]],"meta":{"line":23,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"modules","type":[[["Collection","<"],["string",", "],["Command",">"]]],"meta":{"line":24,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"methods":[{"name":"augmentOption","access":"private","params":[{"name":"module","optional":false,"type":[[["Command"]]]},{"name":"option","optional":false,"type":[[["CommandInteractionOption","<"],["CacheType",">"]]]},{"name":"sub","optional":true,"type":[[["{"],["\ncommand",": "],["string",","],["\ngroup",": "],["string\n","}"]]]}],"returns":[[["Promise","<"],["null"," | "],["Ability"," | "],["Attack"," | "],["EndOfTurn"," | "],["Item"," | "],["Species"," | "],["Weather",">"]]],"meta":{"line":116,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"handleAutocomplete","access":"private","params":[{"name":"interaction","optional":false,"type":[[["AutocompleteInteraction","<"],["'cached'",">"]]]}],"returns":[[["void"]]],"meta":{"line":57,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"handleCommand","access":"private","params":[{"name":"interaction","optional":false,"type":[[["CommandInteraction","<"],["'cached'",">"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":30,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"load","params":[{"name":"path","optional":false,"type":[[["string"]]]}],"returns":[[["CommandHandler"]]],"meta":{"line":45,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"loadAll","params":[{"name":"directory","optional":true,"type":[[["string"]]]}],"returns":[[["CommandHandler"]]],"meta":{"line":57,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"parseOption","access":"private","params":[{"name":"module","optional":false,"type":[[["Command"]]]},{"name":"option","optional":false,"type":[[["CommandInteractionOption","<"],["CacheType",">"]]]},{"name":"sub","optional":true,"type":[[["{"],["\ncommand",": "],["string",","],["\ngroup",": "],["string\n","}"]]]}],"returns":[[["Promise","<"],["undefined"," | "],["null"," | "],["string"," | "],["number"," | "],["boolean"," | "],["User"," | "],["Ability"," | "],["Attack"," | "],["EndOfTurn"," | "],["Item"," | "],["Species"," | "],["Weather"," | "],["APIInteractionDataResolvedChannel"," | "],["GuildBasedChannel"," | "],["GuildMember"," | "],["Role"," | "],["APIInteractionDataResolvedGuildMember"," | "],["APIRole",">"]]],"meta":{"line":93,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"parseOptions","access":"private","params":[{"name":"module","optional":false,"type":[[["Command"]]]},{"name":"options","optional":true,"type":[[["readonly"," "],["Array","<"],["CommandInteractionOption","<"],["CacheType",">>"]]]},{"name":"sub","optional":true,"type":[[["{"],["\ncommand",": "],["string",","],["\ngroup",": "],["string\n","}"]]]}],"returns":[[["Promise","<"],["null"," | {}>"]]],"meta":{"line":67,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"register","params":[{"name":"module","optional":false,"type":[[["RawModule","<"],["Module",", "],["ModuleOptions",">"]]]}],"returns":[[["CommandHandler"]]],"meta":{"line":37,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"setup","returns":[[["CommandHandler"]]],"meta":{"line":14,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"getDeploymentData","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]},{"name":"extensions","optional":true,"type":[[["Set","<"],["string",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["Readonly","<"],["ModuleOptions",">>>"]]],"meta":{"line":85,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"readdirRecursive","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":99,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"meta":{"line":9,"file":"CommandHandler.ts","path":"src/framework/structures/commands"}},{"name":"EndOfTurn","construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["end","_"],["of","_"],["turn"]]]}],"returns":[[["EndOfTurn"]]],"meta":{"line":13,"file":"EndOfTurn.ts","path":"src/framework/models"}},"props":[{"name":"dbid","type":[[["number"]]],"meta":{"line":6,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"effect","type":[[["string"]]],"meta":{"line":8,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"order","type":[[["number"]]],"meta":{"line":7,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":10,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","type":[[["number"]]],"meta":{"line":11,"file":"EndOfTurn.ts","path":"src/framework/models"}}],"methods":[{"name":"getSurrounding","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["Array","<"],["EndOfTurn",">>"]]],"meta":{"line":36,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["EndOfTurn",">"]]],"meta":{"line":25,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":19,"file":"EndOfTurn.ts","path":"src/framework/models"}}],"meta":{"line":5,"file":"EndOfTurn.ts","path":"src/framework/models"}},{"name":"Event","extends":["Module"],"construct":{"name":"constructor","params":[{"name":"options","optional":false,"type":[[["EventOptions"]]]}],"returns":[[["Event"]]],"meta":{"line":14,"file":"Event.ts","path":"src/framework/structures/events"}},"props":[{"name":"client","type":[[["KauriClient"]]],"meta":{"line":10,"file":"Module.ts","path":"src/framework/structures"}},{"name":"emitter","type":[[["EventEmitterType"]]],"meta":{"line":11,"file":"Event.ts","path":"src/framework/structures/events"}},{"name":"name","type":[[["string"]]],"meta":{"line":9,"file":"Module.ts","path":"src/framework/structures"}},{"name":"type","type":[[["string"]]],"meta":{"line":12,"file":"Event.ts","path":"src/framework/structures/events"}}],"methods":[{"name":"runEvent","params":[{"name":"args","optional":false,"type":[[["Array","<"],["any",">"]]],"variable":true}],"returns":[[["void"]]],"meta":{"line":21,"file":"Event.ts","path":"src/framework/structures/events"}}],"meta":{"line":10,"file":"Event.ts","path":"src/framework/structures/events"}},{"name":"EventHandler","extends":["BaseHandler<Event>"],"construct":{"name":"constructor","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"options","optional":false,"type":[[["BaseHandlerOptions"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":12,"file":"EventHandler.ts","path":"src/framework/structures/events"}},"props":[{"name":"classToLoad","default":"Module","type":[[["("],["typeof"," "],["Module",")"]]],"meta":{"line":21,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"client","type":[[["KauriClient"]]],"meta":{"line":20,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"directory","default":"'./'","type":[[["string"]]],"meta":{"line":22,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"emitters","type":[[["Collection","<"],["EventEmitterType",", "],["EventEmitter",">"]]],"meta":{"line":10,"file":"EventHandler.ts","path":"src/framework/structures/events"}},{"name":"extensions","type":[[["Set","<"],["string",">"]]],"meta":{"line":23,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"modules","type":[[["Collection","<"],["string",", "],["Event",">"]]],"meta":{"line":24,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"methods":[{"name":"addToEmitter","access":"private","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":28,"file":"EventHandler.ts","path":"src/framework/structures/events"}},{"name":"load","params":[{"name":"path","optional":false,"type":[[["string"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":45,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"loadAll","params":[{"name":"directory","optional":true,"type":[[["string"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":57,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"register","params":[{"name":"event","optional":false,"type":[[["RawModule","<"],["Module",", "],["ModuleOptions",">"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":21,"file":"EventHandler.ts","path":"src/framework/structures/events"}},{"name":"removeFromEmitter","access":"private","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[["EventHandler"]]],"meta":{"line":54,"file":"EventHandler.ts","path":"src/framework/structures/events"}},{"name":"getDeploymentData","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]},{"name":"extensions","optional":true,"type":[[["Set","<"],["string",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["Readonly","<"],["ModuleOptions",">>>"]]],"meta":{"line":85,"file":"BaseHandler.ts","path":"src/framework/structures"}},{"name":"readdirRecursive","scope":"static","params":[{"name":"directory","optional":false,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":99,"file":"BaseHandler.ts","path":"src/framework/structures"}}],"meta":{"line":9,"file":"EventHandler.ts","path":"src/framework/structures/events"}},{"name":"Item","implements":["item"],"construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["item"]]]}],"returns":[[["Item"]]],"meta":{"line":16,"file":"Item.ts","path":"src/framework/models"}},"props":[{"name":"dbid","type":[[["number"]]],"meta":{"line":7,"file":"Item.ts","path":"src/framework/models"}},{"name":"description","type":[[["string"]]],"meta":{"line":9,"file":"Item.ts","path":"src/framework/models"}},{"name":"name","type":[[["string"]]],"meta":{"line":8,"file":"Item.ts","path":"src/framework/models"}},{"name":"price","type":[[["null"," | "],["number"]]],"meta":{"line":11,"file":"Item.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","default":"[]","type":[[["Array","<"],["string",">"]]],"meta":{"line":13,"file":"Item.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","default":"0","type":[[["number"]]],"meta":{"line":14,"file":"Item.ts","path":"src/framework/models"}}],"methods":[{"name":"info","returns":[[["APIEmbed"]]],"meta":{"line":42,"file":"Item.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["Item",">"]]],"meta":{"line":30,"file":"Item.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":24,"file":"Item.ts","path":"src/framework/models"}}],"meta":{"line":6,"file":"Item.ts","path":"src/framework/models"}},{"name":"KauriClient","extends":["Client"],"construct":{"name":"constructor","params":[{"name":"database","optional":false,"type":[[["PrismaClient","<"],["PrismaClientOptions",", "],["never",", "],["undefined"," | "],["RejectOnNotFound"," | "],["RejectPerOperation",">"]]]},{"name":"logger","optional":false,"type":[[["Logger"]]]},{"name":"options","optional":false,"type":[[["KauriClientOptions"]]]}],"returns":[[["KauriClient"]]],"meta":{"line":17,"file":"KauriClient.ts","path":"src/framework/client"}},"props":[{"name":"application","type":[[["null"," | "],["ClientApplication"]]],"meta":{"line":726,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"channels","type":[[["ChannelManager"]]],"meta":{"line":727,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"commandHandler","type":[[["CommandHandler"]]],"meta":{"line":15,"file":"KauriClient.ts","path":"src/framework/client"}},{"name":"database","type":[[["PrismaClient","<"],["PrismaClientOptions",", "],["never",", "],["undefined"," | "],["RejectOnNotFound"," | "],["RejectPerOperation",">"]]]},{"name":"guilds","type":[[["GuildManager"]]],"meta":{"line":729,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"logger","type":[[["Logger"]]]},{"name":"options","type":[[["ClientOptions"]]],"meta":{"line":730,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"readyTimestamp","type":[[["null"," | "],["number"]]],"meta":{"line":732,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"rest","type":[[["REST"]]],"meta":{"line":366,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"shard","type":[[["null"," | "],["ShardClientUtil"]]],"meta":{"line":734,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"sweepers","type":[[["Sweepers"]]],"meta":{"line":733,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"token","type":[[["null"," | "],["string"]]],"meta":{"line":735,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"user","type":[[["null"," | "],["ClientUser"]]],"meta":{"line":737,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"users","type":[[["UserManager"]]],"meta":{"line":738,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"voice","type":[[["ClientVoiceManager"]]],"meta":{"line":739,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"ws","type":[[["WebSocketManager"]]],"meta":{"line":740,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"captureRejectionSymbol","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["captureRejectionSymbol",")"]]],"meta":{"line":301,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"captureRejections","description":"Sets or gets the default captureRejection value for all emitters.","scope":"static","type":[[["boolean"]]],"meta":{"line":306,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"defaultMaxListeners","scope":"static","type":[[["number"]]],"meta":{"line":307,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"errorMonitor","description":"This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.","scope":"static","readonly":true,"type":[[["("],["typeof"," "],["errorMonitor",")"]]],"meta":{"line":300,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"emojis","readonly":true,"type":[[["BaseGuildEmojiManager"]]],"meta":{"line":728,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"readyAt","readonly":true,"type":[[["If","<"],["Ready",", "],["Date",", "],["null",">"]]],"meta":{"line":731,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"uptime","readonly":true,"type":[[["If","<"],["Ready",", "],["number",", "],["null",">"]]],"meta":{"line":736,"file":"index.d.ts","path":"node_modules/discord.js/typings"}}],"methods":[{"name":"addListener","description":"Alias for `emitter.on(eventName, listener)`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["KauriClient"]]]},{"name":"destroy","returns":[[["void"]]],"meta":{"line":741,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"emit","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"args","optional":false,"type":[[["ClientEvents","["],["K","]"]]],"variable":true}],"returns":[[["boolean"]]],"meta":{"line":767,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"eventNames","description":"Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Array","<"],["string"," | "],["symbol",">"]]]},{"name":"fetchGuildPreview","params":[{"name":"guild","optional":false,"type":[[["GuildResolvable"]]]}],"returns":[[["Promise","<"],["GuildPreview",">"]]],"meta":{"line":742,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchGuildTemplate","params":[{"name":"template","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["GuildTemplate",">"]]],"meta":{"line":744,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchGuildWidget","params":[{"name":"guild","optional":false,"type":[[["GuildResolvable"]]]}],"returns":[[["Promise","<"],["Widget",">"]]],"meta":{"line":749,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchInvite","params":[{"name":"invite","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["ClientFetchInviteOptions"]]]}],"returns":[[["Promise","<"],["Invite",">"]]],"meta":{"line":743,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchPremiumStickerPacks","returns":[[["Promise","<"],["Collection","<"],["string",", "],["StickerPack",">>"]]],"meta":{"line":747,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchSticker","params":[{"name":"id","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Sticker",">"]]],"meta":{"line":746,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchVoiceRegions","returns":[[["Promise","<"],["Collection","<"],["string",", "],["VoiceRegion",">>"]]],"meta":{"line":745,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"fetchWebhook","params":[{"name":"id","optional":false,"type":[[["string"]]]},{"name":"token","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["Webhook",">"]]],"meta":{"line":748,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"generateInvite","params":[{"name":"options","optional":true,"type":[[["InviteGenerationOptions"]]]}],"returns":[[["string"]]],"meta":{"line":750,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"getMaxListeners","description":"Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"returns":[[["number"]]]},{"name":"isReady","returns":[[["this"," "],["is"," "],["Client","<"],["true",">"]]],"meta":{"line":752,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"listenerCount","description":"Returns the number of listeners listening to the event named `eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["number"]]]},{"name":"listeners","description":"Returns a copy of the array of listeners for the event named `eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]]},{"name":"login","params":[{"name":"token","optional":true,"type":[[["string"]]]}],"returns":[[["Promise","<"],["string",">"]]],"meta":{"line":751,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"off","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["KauriClient"]]],"meta":{"line":770,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"on","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["KauriClient"]]],"meta":{"line":755,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"once","params":[{"name":"event","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["ClientEvents","["],["K","]) => "],["Awaitable","<"],["void",">"]]]}],"returns":[[["KauriClient"]]],"meta":{"line":761,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"prependListener","description":"Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["KauriClient"]]]},{"name":"prependOnceListener","description":"Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","description":"The name of the event.","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","description":"The callback function","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["KauriClient"]]]},{"name":"rawListeners","description":"Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]]},{"name":"removeAllListeners","params":[{"name":"event","optional":true,"type":[[["K"]]]}],"returns":[[["KauriClient"]]],"meta":{"line":776,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"removeListener","description":"Removes the specified `listener` from the listener array for the event named`eventName`.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["Array","<"],["any",">) => "],["void"]]]}],"returns":[[["KauriClient"]]]},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[["KauriClient"]]]},{"name":"toJSON","returns":[[["unknown"]]],"meta":{"line":753,"file":"index.d.ts","path":"node_modules/discord.js/typings"}},{"name":"getEventListeners","description":"Returns a copy of the array of listeners for the event named `eventName`.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"," | "],["DOMEventTarget"]]]},{"name":"name","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["Array","<"],["Function",">"]]],"meta":{"line":270,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"listenerCount","description":"A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":true,"emits":[],"params":[{"name":"emitter","description":"The emitter to query","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The event name","optional":false,"type":[[["string"," | "],["symbol"]]]}],"returns":[[["number"]]],"meta":{"line":242,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"on","description":"```js\nconst { on, EventEmitter } = require('events');","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["EventEmitter"]]]},{"name":"eventName","description":"The name of the event being listened for","optional":false,"type":[[["string"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[["AsyncIterableIterator","<"],["any",">"]]],"returnsDescription":"that iterates `eventName` events emitted by the `emitter`","meta":{"line":221,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"once","description":"Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"emitter","optional":false,"type":[[["NodeEventTarget"]]]},{"name":"eventName","optional":false,"type":[[["string"," | "],["symbol"]]]},{"name":"options","optional":true,"type":[[["StaticEventEmitterOptions"]]]}],"returns":[[["Promise","<"],["Array","<"],["any",">>"]]],"meta":{"line":157,"file":"events.d.ts","path":"node_modules/@types/node"}},{"name":"setMaxListeners","description":"By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `EventEmitter.setMaxListeners()` method allows the default limit to be\nmodified (if eventTargets is empty) or modify the limit specified in every `EventTarget` | `EventEmitter` passed as arguments.\nThe value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"name":"n","optional":true,"type":[[["number"]]]},{"name":"eventTargets","optional":false,"type":[[["Array","<"],["EventEmitter"," | "],["DOMEventTarget",">"]]],"variable":true}],"returns":[[["void"]]],"meta":{"line":290,"file":"events.d.ts","path":"node_modules/@types/node"}}],"meta":{"line":14,"file":"KauriClient.ts","path":"src/framework/client"}},{"name":"Logger","construct":{"name":"constructor","returns":[[["Logger"]]]},"props":[{"name":"captureEvent","default":"captureEvent","type":[[["("],["event",": "],["Event",") => "],["string"]]],"meta":{"line":51,"file":"Logger.ts","path":"src/framework/client"}},{"name":"captureException","default":"captureException","type":[[["("],["exception",": "],["any",", "],["captureContext",": "],["CaptureContext",") => "],["string"]]],"meta":{"line":52,"file":"Logger.ts","path":"src/framework/client"}},{"name":"captureMessage","default":"captureMessage","type":[[["("],["message",": "],["string",", "],["captureContext",": "],["Severity"," | "],["CaptureContext",") => "],["string"]]],"meta":{"line":50,"file":"Logger.ts","path":"src/framework/client"}}],"methods":[{"name":"logCommand","params":[{"name":"interaction","optional":false,"type":[[["CommandInteraction","<"],["CacheType",">"]]]}],"returns":[[["void"]]],"meta":{"line":22,"file":"Logger.ts","path":"src/framework/client"}},{"name":"logEvent","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":36,"file":"Logger.ts","path":"src/framework/client"}}],"meta":{"line":21,"file":"Logger.ts","path":"src/framework/client"}},{"name":"Module","construct":{"name":"constructor","params":[{"name":"name","optional":false,"type":[[["string"]]]}],"returns":[[["Module"]]],"meta":{"line":12,"file":"Module.ts","path":"src/framework/structures"}},"props":[{"name":"client","type":[[["KauriClient"]]],"meta":{"line":10,"file":"Module.ts","path":"src/framework/structures"}},{"name":"name","type":[[["string"]]],"meta":{"line":9,"file":"Module.ts","path":"src/framework/structures"}}],"meta":{"line":8,"file":"Module.ts","path":"src/framework/structures"}},{"name":"Species","construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["SpeciesData"]]]}],"returns":[[["Species"]]],"meta":{"line":96,"file":"Species.ts","path":"src/framework/models"}},"props":[{"name":"abilities","type":[[["Array","<"],["SpeciesAbility",">"]]],"meta":{"line":66,"file":"Species.ts","path":"src/framework/models"}},{"name":"attack","type":[[["number"]]],"meta":{"line":72,"file":"Species.ts","path":"src/framework/models"}},{"name":"attacks","type":[[["Array","<"],["SpeciesAttack",">"]]],"meta":{"line":67,"file":"Species.ts","path":"src/framework/models"}},{"name":"dbid","type":[[["number"]]],"meta":{"line":59,"file":"Species.ts","path":"src/framework/models"}},{"name":"defense","type":[[["number"]]],"meta":{"line":73,"file":"Species.ts","path":"src/framework/models"}},{"name":"dex_number","type":[[["number"]]],"meta":{"line":60,"file":"Species.ts","path":"src/framework/models"}},{"name":"height","type":[[["number"]]],"meta":{"line":78,"file":"Species.ts","path":"src/framework/models"}},{"name":"hp","type":[[["number"]]],"meta":{"line":71,"file":"Species.ts","path":"src/framework/models"}},{"name":"name","type":[[["string"]]],"meta":{"line":61,"file":"Species.ts","path":"src/framework/models"}},{"name":"special_attack","type":[[["number"]]],"meta":{"line":74,"file":"Species.ts","path":"src/framework/models"}},{"name":"special_defense","type":[[["number"]]],"meta":{"line":75,"file":"Species.ts","path":"src/framework/models"}},{"name":"speed","type":[[["number"]]],"meta":{"line":76,"file":"Species.ts","path":"src/framework/models"}},{"name":"type1","type":[[["type"]]],"meta":{"line":64,"file":"Species.ts","path":"src/framework/models"}},{"name":"type2","type":[[["null"," | "],["type"]]],"meta":{"line":65,"file":"Species.ts","path":"src/framework/models"}},{"name":"weight","type":[[["number"]]],"meta":{"line":79,"file":"Species.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":91,"file":"Species.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","type":[[["number"]]],"meta":{"line":92,"file":"Species.ts","path":"src/framework/models"}},{"name":"suffix","readonly":true,"type":[[["string"]]],"meta":{"line":229,"file":"Species.ts","path":"src/framework/models"}}],"methods":[{"name":"attacksByMethod","access":"private","params":[{"name":"method","optional":false,"type":[[["string"]]]}],"returns":[[["Array","<"],["string",">"]]],"meta":{"line":239,"file":"Species.ts","path":"src/framework/models"}},{"name":"info","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"query","optional":true,"type":[[["string"]]]},{"name":"rating","optional":true,"type":[[["number"]]]}],"returns":[[["APIEmbed"]]],"meta":{"line":255,"file":"Species.ts","path":"src/framework/models"}},{"name":"learnset","params":[{"name":"query","optional":true,"type":[[["string"]]]},{"name":"rating","optional":true,"type":[[["number"]]]}],"returns":[[["APIEmbed"]]],"meta":{"line":307,"file":"Species.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["Species",">"]]],"meta":{"line":140,"file":"Species.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":134,"file":"Species.ts","path":"src/framework/models"}}],"meta":{"line":58,"file":"Species.ts","path":"src/framework/models"}},{"name":"Weather","construct":{"name":"constructor","params":[{"name":"data","optional":false,"type":[[["weather"]]]}],"returns":[[["Weather"]]],"meta":{"line":17,"file":"Weather.ts","path":"src/framework/models"}},"props":[{"name":"code","type":[[["string"]]],"meta":{"line":12,"file":"Weather.ts","path":"src/framework/models"}},{"name":"color","type":[[["number"]]],"meta":{"line":10,"file":"Weather.ts","path":"src/framework/models"}},{"name":"dbid","type":[[["number"]]],"meta":{"line":7,"file":"Weather.ts","path":"src/framework/models"}},{"name":"description","type":[[["string"]]],"meta":{"line":9,"file":"Weather.ts","path":"src/framework/models"}},{"name":"emoji","type":[[["string"]]],"meta":{"line":11,"file":"Weather.ts","path":"src/framework/models"}},{"name":"name","type":[[["string"]]],"meta":{"line":8,"file":"Weather.ts","path":"src/framework/models"}},{"name":"list","scope":"static","access":"private","type":[[["Array","<"],["string",">"]]],"meta":{"line":14,"file":"Weather.ts","path":"src/framework/models"}},{"name":"listLastFetched","scope":"static","access":"private","type":[[["number"]]],"meta":{"line":15,"file":"Weather.ts","path":"src/framework/models"}}],"methods":[{"name":"info","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["APIEmbed"]]],"meta":{"line":43,"file":"Weather.ts","path":"src/framework/models"}},{"name":"fetch","scope":"static","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]},{"name":"value","optional":false,"type":[[["string"]]]}],"returns":[[["Promise","<"],["null"," | "],["Weather",">"]]],"meta":{"line":32,"file":"Weather.ts","path":"src/framework/models"}},{"name":"getList","scope":"static","access":"private","params":[{"name":"client","optional":false,"type":[[["KauriClient"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":26,"file":"Weather.ts","path":"src/framework/models"}}],"meta":{"line":6,"file":"Weather.ts","path":"src/framework/models"}}],"typedefs":[{"name":"BaseHandlerOptions","meta":{"line":9,"file":"BaseHandler.ts","path":"src/framework/structures"},"props":[{"name":"classToLoad","optional":true,"type":[[["("],["typeof"," "],["Module",")"]]]},{"name":"directory","optional":false,"type":[[["string"]]]},{"name":"extensions","optional":true,"type":[[["Array","<"],["string",">"]]]},{"name":"loadFilter","optional":true,"type":[[["("],["args",": "],["any",") => "],["boolean"]]]}]},{"name":"EventOptions","meta":{"line":4,"file":"Event.ts","path":"src/framework/structures/events"},"props":[{"name":"emitter","optional":false,"type":[[["EventEmitterType"]]]},{"name":"name","optional":false,"type":[[["string"]]]},{"name":"type","optional":true,"type":[[["EventBindingType"]]]}]},{"name":"KauriClientOptions","meta":{"line":8,"file":"KauriClient.ts","path":"src/framework/client"},"props":[{"name":"allowedMentions","optional":true,"type":[[["MessageMentionOptions"]]]},{"name":"commandDirectory","optional":false,"type":[[["string"]]]},{"name":"eventDirectory","optional":false,"type":[[["string"]]]},{"name":"failIfNotExists","optional":true,"type":[[["boolean"]]]},{"name":"intents","optional":false,"type":[[["BitFieldResolvable","<"],["'Guilds'"," | "],["'GuildMembers'"," | "],["'GuildBans'"," | "],["'GuildEmojisAndStickers'"," | "],["'GuildIntegrations'"," | "],["'GuildWebhooks'"," | "],["'GuildInvites'"," | "],["'GuildVoiceStates'"," | "],["'GuildPresences'"," | "],["'GuildMessages'"," | "],["'GuildMessageReactions'"," | "],["'GuildMessageTyping'"," | "],["'DirectMessages'"," | "],["'DirectMessageReactions'"," | "],["'DirectMessageTyping'"," | "],["'MessageContent'"," | "],["'GuildScheduledEvents'",", "],["number",">"]]]},{"name":"makeCache","optional":true,"type":[[["CacheFactory"]]]},{"name":"partials","optional":true,"type":[[["Array","<"],["Partials",">"]]]},{"name":"presence","optional":true,"type":[[["PresenceData"]]]},{"name":"rest","optional":true,"type":[[["Partial","<"],["RESTOptions",">"]]]},{"name":"shardCount","optional":true,"type":[[["number"]]]},{"name":"shards","optional":true,"type":[[["number"," | "],["Array","<"],["number","> | "],["'auto'"]]]},{"name":"sweepers","optional":true,"type":[[["SweeperOptions"]]]},{"name":"waitGuildTimeout","optional":true,"type":[[["number"]]]},{"name":"ws","optional":true,"type":[[["WebSocketOptions"]]]},{"name":"jsonTransformer","optional":true,"type":[[["("],["obj",": "],["unknown",") => "],["unknown"]]]}]},{"name":"ModuleOptions","meta":{"line":4,"file":"Module.ts","path":"src/framework/structures"},"props":[{"name":"name","optional":false,"type":[[["string"]]]}]},{"name":"ArgumentsOf","type":[[["C"," "],["extends"," {"],["\noptions",": "],["readonly"," "],["Array","<"],["ReadonlyOption",">"],["\n","} ? "],["UnionToIntersection","<"],["OptionToObject","<"],["C","["],["'options'","]["],["number","]>> : "],["unknown"]]],"meta":{"line":91,"file":"ArgumentsOf.ts","path":"src/framework/structures/commands"}},{"name":"CommandData","type":[[["ChatInputApplicationCommandData"," & {"],["\ndefer",": "],["boolean",","],["\nglobal",": "],["boolean",","],["\noptions",": "],["Array","<"],["CommandOptionData",">,"],["\npermissions",": "],["Array","<"],["ApplicationCommandPermissionData",">"],["\n","}"]]],"meta":{"line":9,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"CommandOptionData","type":[[["ApplicationCommandOptionData"," & {"],["\naugmentTo",": "],["ModelName",","],["\noptions",": "],["Array","<"],["CommandOptionData",">"],["\n","}"]]],"meta":{"line":16,"file":"Command.ts","path":"src/framework/structures/commands"}},{"name":"CommandOptions","type":[[["CommandData"," & "],["ModuleOptions"]]],"meta":{"line":21,"file":"Command.ts","path":"src/framework/structures/commands"}}]}